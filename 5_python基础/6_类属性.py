# 类属性
class Test(object):
    #类属性
    a = 100
    def __init__(self, b):
        #实例属性
        self.b = b
t = Test(100)
#通过实例化对象访问 类属性
print("t.a = %d"%t.a)
#通过类名访问 类属性
print("Test.a = %d"%Test.a)
#通过实例化对象访问 实例属性
print("t.b = %d"%t.b)
#通过类名访问 实例属性
# print("Test.b = %d"%Test.b) #error 无法通过（类名.属性名）的方式访问实例属性

# 类属性总结：
# 类属性我们可以通过类名及实例对象去访问，即：
# 类名.类属性，
# 实例对象.类属性
# 类属性只能被类对象更改。

# 在__init__()外初始化
# 在内部用类名.类属性名调用
# 外部既可以用类名.类属性名又可以用实例化对象.类属性名来调用

# 实例属性总结
# 在__init__(self,…)中初始化
# 内部调用时都需要加上self.
# 外部调用时用实例化对象.属性名

# 私有属性：
# 单下划线_开头：只是告诉别人这是私有属性，外部依然可以访问更改
# 双下划线__开头：外部不可通过实例化对象.属性名来访问或者更改